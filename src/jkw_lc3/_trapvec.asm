	.ORIG x400
	BRnzp STARTUP
	.FILL PROCTGETC
	.FILL PROCTOUT
	.FILL PROCTPUTS


STARTUP
	ST R0,UPPERR0
	ST R1,UPPERR1
	ST R2,UPPERR2
	ST R3,UPPERR3
	LD R1,ADDR
	LEA R2,TRAPVEC
	AND R3,R3,#0
	ADD R3,R3,#6

TRAPVECLOOP
	LDR R0,R2,#0
	STR R0,R1,#0
	ADD R1,R1,#1
	ADD R2,R2,#1
	ADD R3,R3,#-1
	BRp TRAPVECLOOP
	LD R0,UPPERR0
	LD R1,UPPERR1
	LD R2,UPPERR2
	LD R3,UPPERR3
	RET
UPPERR0	.BLKW 1
UPPERR1 .BLKW 1
UPPERR2 .BLKW 1
UPPERR3 .BLKW 1
	
ADDR	.FILL x0020
TRAPVEC	.FILL TGETC
	.FILL TOUT
	.FILL TPUTS
	.FILL TIN
	.FILL x0000
	.FILL THALT
	
KBSR	.FILL xFE00
KBDR	.FILL xFE02
DSR	.FILL xFE04
DDR	.FILL xFE06

SAVER1	.BLKW 1
SAVER2	.BLKW 1
SAVER3	.BLKW 1
SAVER4	.BLKW 1

MASK	.FILL x7FFF
MASK2	.FILL x00FF


PROCTGETC
	ST R1,SAVER1
	ST R2,SAVER2

	LD R2,KBSR

GCLOOP	LDI R1,KBSR
	ADD R1,R1,#0
	BRzp GCLOOP
	LDI R0,KBDR
	LD R2,MASK2
	AND R0,R0,R2
	LD R2,MASK
	AND R1,R1,R2
	STI R1,KBSR ;ACK STATUS

	LD R1,SAVER1
	LD R2,SAVER2
	RET


PROCTOUT
	ST R1,SAVER1
	ST R2,SAVER2
	ST R3,SAVER3
	LD R1,MASK
	LD R2,DSR
OTLOOP	LDR R3,R2,#0
	ADD R3,R3,#0
	BRn OTLOOP

	STI R0,DDR
	LD R1,MASK
	NOT R3,R3
	AND R3,R3,R1
	NOT R3,R3
	STI R3,DSR

	LD R1,SAVER1
	LD R2,SAVER2
	LD R3,SAVER3
	RET

TGETCSAVER7 .BLKW 1

TGETC	ST R7,TGETCSAVER7
	JSR PROCTGETC
	LD R7,TGETCSAVER7
	RTI

TOUTSAVER7 .BLKW 1
TOUT	ST R7,TOUTSAVER7
	JSR PROCTOUT
	LD R7,TOUTSAVER7
	RTI




SAVE2R0	.BLKW 1
SAVE2R1	.BLKW 1
SAVE2R2	.BLKW 1
PROCTPUTSSAVER7 .BLKW 1

PROCTPUTS
	ST R0,SAVE2R0
	ST R1,SAVE2R1
	ST R7,PROCTPUTSSAVER7
	ADD R1,R0,#0

TPUTSAGAIN	
	LDR R0,R1,#0
	ADD R0,R0,#0
	BRz TPUTSEND
	JSR PROCTOUT
	ADD R1,R1,#1
	BRnzp TPUTSAGAIN
	
TPUTSEND
	LD R0,SAVE2R0
	LD R1,SAVE2R1
	LD R7,PROCTPUTSSAVER7
	RET


TPUTSSAVER7 .BLKW 1
TPUTS	ST R7,TPUTSSAVER7
	JSR PROCTPUTS
	LD R7,TPUTSSAVER7
	RTI


TINSAVER7 .BLKW 1
TIN	ST R7,TINSAVER7
	JSR PROCTGETC
	JSR PROCTOUT
	LD R7,TINSAVER7
	RTI	


; WHEN USER RETURN CONTROL TO THIS OS
THALT	AND R0,R0,#0
	ADD R0,R0,#5
	TRAP x0
	TRAP x0 ; consume user's pc and psr
	RTI

	.END