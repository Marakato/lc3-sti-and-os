	.ORIG x200

;GLOBAL INITIALIZE

	AND R0,R0,#0
	ADD R0,R0,#1
	LEA R1,TRAPFILE
	TRAP x0
	ST R2,INIT_TRAP
	AND R0,R0,#0
	ADD R0,R0,#1
	LEA R1,INTFILE
	TRAP x0
	ST R2,INIT_INT
	
	LD R0,INIT_TRAP
	JSRR R0
	LD R0,INIT_INT
	JSRR R0
	BRnzp OS_START

TRAPFILE .STRINGZ "_trapvec.obj"
INTFILE  .STRINGZ "_intvec.obj"	
	
INIT_TRAP
	.BLKW 1
INIT_INT
	.BLKW 1



; reading letters and print them

SRUNPROG .STRINGZ "run"
SCLSC	.STRINGZ "cls"
STOHALT	.STRINGZ "halt"

SUNKNOWN .STRINGZ "unknown command! input again!\n"
	.FILL 0
SHALTSTR .STRINGZ "Exit OS! Thank you~\n"

OS_START
	JSR READ_STR
	LEA R1,SRUNPROG
	JSR STRCMP
	ADD R2,R2,#0
	BRz RUN_PROG
	
	LEA R1,SCLSC
	JSR STRCMP
	ADD R2,R2,#0
	BRz PCLS

	LEA R1,STOHALT
	JSR STRCMP
	ADD R2,R2,#0
	BRz PHALT
	
	LEA R0,SUNKNOWN
	TRAP x22
	BRnzp OS_START
	

RUN_PROG
	AND R0,R0,#0
	ADD R0,R0,#4

	LD R1,PSR
	TRAP x0
	LEA R1,OS_START
	TRAP x0
	
	JSR READ_STR
	ADD R1,R0,#0
	AND R0,R0,#0
	ADD R0,R0,#1
	TRAP x0
	; NOW R2
	ADD R2,R2,#0
	BRz OS_START
	AND R0,R0,#0
	ADD R0,R0,#4
	LD R1,USER_PSR
	TRAP x0
	ADD R1,R2,#0
	TRAP x0
	RTI

PCLS	AND R0,R0,#0
	ADD R0,R0,#3
	TRAP x0
	BRnzp OS_START

PHALT	LEA R0,SHALTSTR
	TRAP x22
	LD R0,CLOCKVAL
	STI R0,CLOCK
	BRnzp PHALT

CLOCKVAL .FILL x7FFF
CLOCK	.FILL xFFFE
PSR	.FILL x0002
USER_PSR .FILL x8002

;;;;;;;;;;;;;;;;;;;;;;;;;;;
STRCMP_R0 .BLKW 1
STRCMP_R1 .BLKW 1
STRCMP_R3 .BLKW 1

STRCMP	ST R0,STRCMP_R0
	ST R1,STRCMP_R1
	ST R3,STRCMP_R3

CMP_NEXT
	LDR R2,R0,#0
	LDR R3,R1,#0
	NOT R3,R3
	ADD R3,R3,#1
	ADD R2,R2,R3
	BRnp NOT_EQUAL
	LDR R2,R0,#0
	ADD R2,R2,#0
	BRz END_EQUAL
	ADD R0,R0,#1
	ADD R1,R1,#1
	BRnzp CMP_NEXT

NOT_EQUAL
	LD R0,STRCMP_R0
	LD R1,STRCMP_R1
	LD R3,STRCMP_R3
	AND R2,R2,#0
	ADD R2,R2,#1
	RET
END_EQUAL
	LD R0,STRCMP_R0
	LD R1,STRCMP_R1
	LD R3,STRCMP_R3
	AND R2,R2,#0
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;

RSTR_R1 .BLKW 1
RSTR_R2 .BLKW 1
RSTR_R3 .BLKW 1
RSTR_R7 .BLKW 1

READ_STR
	ST R1,RSTR_R1
	ST R2,RSTR_R2
	ST R3,RSTR_R3
	ST R7,RSTR_R7

	AND R1,R1,#0
	ST R1,BUFFID

	LEA R3,BUFFER
RSTR_AGAIN	
	GETC
	ADD R1,R0,#0
	ADD R1,R1,#-10
	BRz IS_ENTER
	ADD R1,R0,#0
	ADD R1,R1,#-8
	BRz IS_BACK

	PUTC
	LD R2,BUFFID
	ADD R2,R3,R2
	STR R0,R2,#0

	LD R2,BUFFID
	ADD R2,R2,#1
	ST R2,BUFFID
	BRnzp RSTR_AGAIN
	
IS_ENTER:
	PUTC
	LD R2,BUFFID
	;ADD R2,R2,#1
	ADD R2,R3,R2
	AND R0,R0,#0
	STR R0,R2,#0
	LEA R0,BUFFER
	LD R1,RSTR_R1
	LD R2,RSTR_R2
	LD R3,RSTR_R3
	LD R7,RSTR_R7
	RET
IS_BACK:
	LD R2,BUFFID
	ADD R2,R2,#0
	BRnz CANTBACK
	PUTC
	ADD R2,R2,#-1
	ST R2,BUFFID
CANTBACK
	BRnzp RSTR_AGAIN



BUFFID	.FILL x0
BUFFER	.BLKW #100
	.END